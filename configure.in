AC_INIT(configure.in)
AM_INIT_AUTOMAKE(elogbook, 1.8.3)
AC_CONFIG_MACRO_DIR([m4])
AC_PROG_CXX
AC_PROG_LIBTOOL
CXXFLAGS="-Wall -Werror -O2 -Wno-non-virtual-dtor"

dnl *********************************************
dnl external programs
dnl *********************************************
AC_PATH_PROG(QEDIT,     qedit,      qedit)
AC_PATH_PROG(KONQUEROR, konqueror,  konqueror)
AC_PATH_PROG(KUICKSHOW, kuickshow,  kuickshow)
AC_PATH_PROG(GV,        kghostview, kghostview)

dnl *********************************************
dnl aspell
dnl *********************************************
AC_PATH_PROG(ASPELL,    aspell,    aspell)

dnl ***********************
dnl aspell configuration checks
AC_CHECK_LIB(aspell, new_aspell_speller,
	 [AC_CHECK_HEADER(aspell.h, [
	  have_aspell=yes
	  AC_DEFINE(HAVE_ASPELL, 1, [Define to 1 if you have aspell available])
	 ],
	 [have_aspell="no (requires aspell http://www.gzip.org/zlib/)"])],
	 [have_aspell="no (requires aspell http://www.gzip.org/zlib/)"])

AC_SUBST(have_aspell)

dnl *********************************************
dnl Qt
dnl *********************************************

dnl ****************
dnl set Qt directory
AC_ARG_WITH( qt-dir,
  [ --with-qt-dir=path    Path to Qt directory /usr/lib/qt4 ],
  qt_dir=$withval, qt_dir= )

if test "$qt_dir" = ""; then
  qt_dir=/usr/lib/qt4
fi

dnl ************************
dnl set Qt library directory
AC_ARG_WITH(qt-libraries,
  [ --with-qt-libraries=path    Path to Qt libraries directory /usr/lib/qt4/lib ],
  qt_libraries=$withval, qt_libraries=)

if test "$qt_libraries" = ""; then
  qt_libraries=$qt_dir/lib
fi

dnl ************************
dnl set Qt include directory
AC_ARG_WITH(qt-includes,
  [ --with-qt-includes=path    Path to Qt includes directory /usr/lib/qt4/include ],
  qt_includes=$withval, qt_includes=)

if test "$qt_includes" = ""; then
  qt_includes=$qt_dir/include
fi

dnl *********************
dnl set Qt bin directory
AC_ARG_WITH(qt-bin,
  [ --with-qt-bin=path    Path to Qt bin directory /usr/lib/qt3/bin ],
  qt_bin=$withval, qt_bin=)

if test "$qt_bin" = ""; then
  qt_bin=$qt_dir/bin
fi

dnl ***********************
dnl Qt configuration checks

AC_CHECK_FILE($qt_includes/QtCore/QtCore, , AC_ERROR(Can not find QtCore include file))
AC_CHECK_FILE($qt_libraries/libQtCore.so, qt_lib=QtCore,  qt_lib=QtCore )

AC_PATH_PROG(qt_moc, moc,  $qt_bin/moc)
AC_PATH_PROG(qt_rcc, rcc,  $qt_bin/rcc)

AC_SUBST(qt_lib)
AC_SUBST(qt_dir)
AC_SUBST(qt_libraries)
AC_SUBST(qt_includes)
AC_SUBST(qt_bin)

echo ""
echo "Qt configuration:"
echo "qt_lib       = " $qt_lib
echo "qt_dir       = " $qt_dir
echo "qt_libraries = " $qt_libraries
echo "qt_includes  = " $qt_includes
echo "qt_bin       = " $qt_bin

dnl **************************
dnl Shared vs static

AC_ARG_ENABLE(shared-libraries, [AS_HELP_STRING([--enable-shared], [enable shared libraries for program dependencies])],, [enable_shared_libraries=no])
if test no != $enable_shared_libraries; then
  echo ""
	echo "using shared libraries for program dependencies"
else
  echo ""
	echo "using static libraries for program dependencies"
fi

AM_CONDITIONAL(ENABLE_SHARED, [test no != $enable_shared_libraries])

dnl **************************
dnl retrieve current timestamp
timestamp=`date +"%G/%m/%d"`
AC_SUBST(timestamp)
echo ""
echo "timestamp = " $timestamp

dnl **************************
dnl output files
echo ""
AC_OUTPUT( Makefile \
  base/Makefile \
  base-qt/Makefile \
  base-help/Makefile \
  base-server/Makefile \
  base-pixmaps/Makefile \
  base-spellcheck/Makefile \
  elogbook.spec \
  pixmaps/Makefile \
  extra-includes/Makefile \
  src/Makefile \
  src/Config.h \
  src/SystemOptions.h )
